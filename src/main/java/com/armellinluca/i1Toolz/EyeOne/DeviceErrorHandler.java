package com.armellinluca.i1Toolz.EyeOne;

import java.util.ArrayList;
import java.util.List;
import java.util.function.BiConsumer;
import java.util.function.BiPredicate;

/**
 * The DeviceErrorHandler allows for a list of BiConsumers to be executed
 * whenever the predicate turns true.
 *
 * Predicate predicate:
 *      input: Integer message generated by the instrument
 *      output: TRUE when the message corresponds to the error this handler should handle
 *              and false otherwise.
 *
 * BiConsumers:
 *      Callbacks to be executed whenever the instrument generates the error
 *      truing the predicate.
 *      input: the first parameter is a String containing the extended error message
 *             generated by the instrument, the second is an Integer containing the
 *             error code generated by the instrument.
 * */

public class DeviceErrorHandler {
    private final List<BiConsumer<String,Integer>> callbacks = new ArrayList<>();
    private final BiPredicate<String,Integer> predicate;

    public DeviceErrorHandler(BiPredicate<String,Integer> predicate){
        this.predicate = predicate;
    }

    public void add(BiConsumer<String,Integer> callback){
        callbacks.add(callback);
    }

    public void remove(BiConsumer<String,Integer> callback){
        callbacks.remove(callback);
    }

    public void clearAll(){
        callbacks.clear();
    }

    public void run(String s, int msg){
        if(predicate.test(s,msg))
            callbacks.forEach((c)->c.accept(s,msg));
    }
}
